<project name="dokuJClient" default="jar">
    <property name="version.number" value="1.1.0"/>
    <property name="version.suffix" value="-dev"/>
    <property name="version" value="${version.number}${version.suffix}"/>
    <property name="lib.dir" value="/usr/share/java" />
    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir" value="${build.dir}/jar"/>
    <property name="jar.name" value="${ant.project.name}-${version}.jar"/>
    <property name="testresults.dir" value="${build.dir}/junitreport" />
    <path id="classpath">
       <pathelement location="${lib.dir}/ws-commons-util.jar" />
       <pathelement location="${lib.dir}/xmlrpc-client.jar" />
       <pathelement location="${lib.dir}/xmlrpc-common.jar" />
       <pathelement location="./3rdparty/aXMLRPC/aXMLRPC_v1.5.0.jar" />
    </path>

    <!-- cobertura -->
    <property name="cobertura.dir" value="/usr/share/java" />
    <property name="instrumented.dir" value="${build.dir}/cobertura"/>
    <property name="instrumented.file" value="${instrumented.dir}/cobertura.ser"/>

    <path id="cobertura.classpath">
      <fileset dir="${cobertura.dir}">
        <include name="cobertura.jar" />
        <include name="lib/**/*.jar" />
      </fileset>
     </path>

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

    <target name="cobertura" depends="compileAll">
      <echo message="If this fails, make sure you have Cobertura installed in ${cobertura.dir}"/>
      <delete file="cobertura.ser" />

      <cobertura-instrument todir="${instrumented.dir}" datafile="${instrumented.file}">
        <ignore regex="org.apache.log4j.*" />
        <fileset dir="${classes.dir}">
           <include name="**/*.class" />
           <exclude name="**/itest/**" />
           <exclude name="**/utest/**" />
        </fileset>
        <!--fileset dir="${jar.dir}">
          <include name="${ant.project.name}.tests.jar" />
        </fileset-->
      </cobertura-instrument>
    </target>

    <!-- targets -->
    <target name="clean" depends="cleanLight">
        <delete dir="${build.dir}"/>
    </target>

    <!--To avoid deleting the main jar if we just want to run tests-->
    <target name="cleanLight">
      <delete dir="${classes.dir}"/>
    </target>

    <target name="compileClasses">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="src" destdir="${classes.dir}" excludesfile=".excludesfile" includeantruntime="false" classpathref="classpath" debug="on"/>
    </target>

    <target name="jar" depends="clean,compileClasses">
      <mkdir dir="${jar.dir}"/>
      <jar destfile="${jar.dir}/${jar.name}" basedir="${classes.dir}" excludesfile=".excludesfile">
        <manifest>
          <attribute name="Implementation-Version" value="${version}" />
        </manifest>
      </jar>
      <echo message="${jar.name} has been built and may be found in ${jar.dir}"/>
    </target>

    <target name="compileAll" depends="cleanLight">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="src" destdir="${classes.dir}" includeantruntime="false" debug="on">
          <classpath>
           <path refid="classpath" />
           <pathelement location="${lib.dir}/junit4.jar" />
          </classpath>
        </javac>
        <jar destfile="${jar.dir}/${ant.project.name}.tests.jar" basedir="${classes.dir}" />
    </target>

    <target name="junit" depends="compileAll">
      <mkdir dir="${testresults.dir}" />

      <echo message="If tests fail, please make sure you've installed the fake wiki. See README for more information." />

      <junit printsummary="yes" dir="src" haltonfailure="on" fork="yes" forkmode="once">
      <sysproperty key="net.sourceforge.cobertura.datafile" file="${instrumented.file}" />
        <classpath location="${instrumented.dir}"/>
        <classpath>
          <path refid="classpath" />
          <pathelement location="${jar.dir}/${ant.project.name}.tests.jar" />
          <pathelement location="${lib.dir}/junit4.jar" />
        </classpath>
        <classpath refid="cobertura.classpath"/>

        <formatter type="xml" />

        <batchtest fork="yes" todir="${testresults.dir}" >
          <fileset dir="src" includes="dw/xmlrpc/*test/T_*java" />
        </batchtest>
      </junit>
    </target>

    <target name="junitreport" depends="junit">
      <junitreport todir="${testresults.dir}">
        <fileset dir="${testresults.dir}" includes="TEST-*.xml"/>
        <report todir="${testresults.dir}"/>
      </junitreport>
      <echo message="Test results are available at ${testresults.dir}/index.html"/>
    </target>

    <target name="junitfullreport" depends="cobertura,junitreport">
      <cobertura-report srcdir="src" destdir="${build.dir}/coverage" datafile="${instrumented.file}"/>
      <echo message="Test coverage is available at ${build.dir}/coverage/index.html"/>
    </target>
</project>
